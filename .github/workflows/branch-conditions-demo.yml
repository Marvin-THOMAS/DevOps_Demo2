name: Branch Conditions Demo

on:
  push:  # D√©clench√© sur tous les push

jobs:
  build:
    name: Build (toutes branches)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean compile

  ci:
    name: CI (develop & feature/*) - Run test
    runs-on: ubuntu-latest
    needs: build
    if: (github.ref == 'refs/heads/develop') && !contains(github.ref, 'wip') || startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/release/')
    steps:
      - name: Simuler CI
        run: echo "‚úÖ CI ex√©cut√©e pour ${{ github.ref }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Run tests
        run: mvn test

  release:
    name: Release (release/* sauf hotfix/*)
    runs-on: ubuntu-latest
    needs: ci
    if: startsWith(github.ref, 'refs/heads/release/')
    steps:
      - name: Simuler release
        run: echo "üöÄ Release en cours pour ${{ github.ref }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t nyak1937/helloapi:latest .

      - name: Push Docker image
        run: docker push nyak1937/helloapi:latest


  hotfix:
    name: Hotfix (hotfix/*)
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/heads/hotfix/')
    steps:
      - name: Simuler hotfix
        run: echo "üõ†Ô∏è Hotfix d√©marr√© pour ${{ github.ref }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t nyak1937/helloapi:latest .

      - name: Push Docker image
        run: docker push nyak1937/helloapi:latest
